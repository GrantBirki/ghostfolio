version: "3.9"
services:
  ghostfolio:
    image: ghostfolio/ghostfolio:2.11.0
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?connect_timeout=300&sslmode=prefer
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - 3333:3333
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  caddy:
    container_name: caddy-service
    restart: unless-stopped
    build:
      context: ./src/caddy
      dockerfile: ./Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/caddy_data:/data
      - ./data/caddy_config:/config
    depends_on:
      - ghostfolio
    environment:
      PROXY_BACKEND: ghostfolio
      PROXY_PORT: 3333
      DOMAIN: ${DOMAIN}

  postgres:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/db:/var/lib/postgresql/data

  redis:
    image: redis:7.2.1-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres:
